{{- $dbHostname := ternary (include "inception.deployment.database.hostname" .) (.Values.config.database.hostname) .Values.mariadb.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inception.fullname" . }}
  labels:
    {{- include "inception.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "inception.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "inception.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inception.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-for-db
        image: mariadb
        env:
        - name: MARIADB_HOST
          value: {{ $dbHostname }}
        - name: MARIADB_DATABASE
          value: {{ .Values.config.database.name }}
        - name: MARIADB_USER
          value: {{ .Values.config.database.auth.username }}
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ default (include "inception.secret.databaseAuth.name" .) .Values.config.database.auth.password.existingSecret.secretName }}
              key: {{ default "password" .Values.config.database.auth.password.existingSecret.secretkey }}
        command: 
          - sh
          - -c
          - "mariadb \
              --skip-ssl
              --default-character-set=utf8mb4 \
              --database $MARIADB_DATABASE \
              -h $MARIADB_HOST \
              -u $MARIADB_USER \
              -p$MARIADB_PASSWORD \ 
              -e \"USE $MARIADB_DATABASE\""
          
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: INCEPTION_DB_URL
            value: "jdbc:mariadb://{{ $dbHostname }}:{{ .Values.config.database.port }}/{{ .Values.config.database.name }}?useSSL={{ .Values.config.database.useSSL }}&serverTimezone={{ .Values.config.database.serverTimezone }}&useUnicode=true&characterEncoding=UTF-8"
          - name: INCEPTION_DB_USERNAME
            value: {{ .Values.config.database.auth.username }}
          - name: INCEPTION_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ default (include "inception.secret.databaseAuth.name" .) .Values.config.database.auth.password.existingSecret.secretName }}
                key: {{ default "password" .Values.config.database.auth.password.existingSecret.secretkey }}

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: httpgit
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 2
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
          - mountPath: /export/settings.properties
            subPath: settings.properties
            name: inception-settings
          - mountPath: /export
            name: inception-data
          - mountPath: /tmp
            name: inception-tmp

      volumes:
      - name: inception-settings
        configMap:
          name: {{ include "inception.configmap.appConf.name" . }}
      - name: inception-data
        persistentVolumeClaim:
          claimName: {{ include "inception.persistence.pvc.name" . }}
      - name: inception-tmp
        emptyDir:
          sizeLimit: 1Gi

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}