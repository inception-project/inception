{{- $dbHostname := ternary (include "inception.deployment.database.hostname" .) (.Values.config.database.hostname) .Values.mariadb.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inception.fullname" . }}
  labels:
    {{- include "inception.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "inception.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps/inception.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "inception.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inception.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- with .Values.initContainers }}
      initContainers:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
          
      containers:
        {{- with .Values.extraContainers }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}

        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: INCEPTION_DB_URL
            value: "jdbc:mariadb://{{ $dbHostname }}:{{ .Values.config.database.port }}/{{ .Values.config.database.name }}?useSSL={{ .Values.config.database.useSSL }}&serverTimezone={{ .Values.config.database.serverTimezone }}&useUnicode=true&characterEncoding=UTF-8"
          - name: INCEPTION_DB_USERNAME
            value: {{ .Values.config.database.auth.username }}
          - name: INCEPTION_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ default (include "inception.secret.databaseAuth.name" .) .Values.config.database.auth.password.existingSecret.secretName }}
                key: {{ default "password" .Values.config.database.auth.password.existingSecret.secretkey }}
          {{- if .Values.auth.oauth2.enabled }}
          - name: OIDC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ default (include "inception.secret.oauth2.name" .) .Values.auth.oauth2.clientSecret.existingSecret.secretName }}
                key: {{ default "clientSecret" .Values.auth.oauth2.clientSecret.existingSecret.secretKey }}
          {{- end }}
          {{- if .Values.auth.defaultAdmin.enabled }}
          - name: DEFAULT_ADMIN_PHASH
            valueFrom:
              secretKeyRef:
                name: {{ default (include "inception.secret.admin.name" .) .Values.auth.defaultAdmin.password.existingSecret.secretName }}
                key: {{ default "passwordHash" .Values.auth.defaultAdmin.password.existingSecret.secretKey }}
          {{- end }}
          {{- range $name, $value := .Values.extraEnv }}
          - name: {{ $name }}
            value: {{ $value }}
          {{- end }}

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.config.baseUrl }}/actuator/health
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}

          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.config.baseUrl }}/actuator/health
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
            - mountPath: /export/settings.properties
              subPath: settings.properties
              name: inception-settings
            - mountPath: /export
              name: inception-data
            - mountPath: /tmp
              name: inception-tmp
            {{- if .Values.auth.saml2.enabled }}
            - mountPath: /var/run/secrets/saml/idp/saml-idp.crt
              subPath: {{ default "saml-idp.crt" .Values.auth.saml2.assertingPartyCertificate.existingSecret.secretKey }}
              name: saml-idp-cert
            {{- if .Values.auth.saml2.signRequest.enabled }}
            - mountPath: /var/run/secrets/saml/client
              name: saml-client-cert
            {{- end }}
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}

      volumes:
        - name: inception-settings
          configMap:
            name: {{ include "inception.configmap.appConf.name" . }}
        - name: inception-data
          persistentVolumeClaim:
            claimName: {{ include "inception.persistence.pvc.name" . }}
        - name: inception-tmp
          emptyDir:
            sizeLimit: 1Gi
        {{- if .Values.auth.saml2.enabled }}
        - name: saml-idp-cert
          secret:
            secretName: {{ default (include "inception.secret.saml2.idp-cert.name" .) (.Values.auth.saml2.assertingPartyCertificate.existingSecret.secretName) }}
        {{- if .Values.auth.saml2.signRequest.enabled }}
        - name: saml-client-cert
          secret:
            secretName: {{ default (include "inception.secret.saml2.client-cert.name" .) (.Values.auth.saml2.signRequest.existingTlsSecret) }}
        {{- end }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}