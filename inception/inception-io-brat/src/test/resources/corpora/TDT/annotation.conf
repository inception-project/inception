[spans]

A
Adp
Adv
C
Interj
N
Null
Num
Pcle
Pron
Punct
Trash
Symb
Foreign
V

[relations]
acomp Arg1:<ENTITY>, Arg2:<ENTITY>
acomp-exp Arg1:<ENTITY>, Arg2:<ENTITY>
adpos Arg1:<ENTITY>, Arg2:<ENTITY>
adpos-exp Arg1:<ENTITY>, Arg2:<ENTITY>
advcl Arg1:<ENTITY>, Arg2:<ENTITY>
advcl-exp Arg1:<ENTITY>, Arg2:<ENTITY>
advmod Arg1:<ENTITY>, Arg2:<ENTITY>
advmod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
amod Arg1:<ENTITY>, Arg2:<ENTITY>
amod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
appos Arg1:<ENTITY>, Arg2:<ENTITY>
appos-exp Arg1:<ENTITY>, Arg2:<ENTITY>
aux Arg1:<ENTITY>, Arg2:<ENTITY>
aux-exp Arg1:<ENTITY>, Arg2:<ENTITY>
auxpass Arg1:<ENTITY>, Arg2:<ENTITY>
auxpass-exp Arg1:<ENTITY>, Arg2:<ENTITY>
cc Arg1:<ENTITY>, Arg2:<ENTITY>
cc-exp Arg1:<ENTITY>, Arg2:<ENTITY>
ccomp Arg1:<ENTITY>, Arg2:<ENTITY>
ccomp-exp Arg1:<ENTITY>, Arg2:<ENTITY>
compar Arg1:<ENTITY>, Arg2:<ENTITY>
comparator Arg1:<ENTITY>, Arg2:<ENTITY>
comparator-exp Arg1:<ENTITY>, Arg2:<ENTITY>
compar-exp Arg1:<ENTITY>, Arg2:<ENTITY>
complm Arg1:<ENTITY>, Arg2:<ENTITY>
complm-exp Arg1:<ENTITY>, Arg2:<ENTITY>
conj Arg1:<ENTITY>, Arg2:<ENTITY>
conj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
cop Arg1:<ENTITY>, Arg2:<ENTITY>
cop-exp Arg1:<ENTITY>, Arg2:<ENTITY>
csubj Arg1:<ENTITY>, Arg2:<ENTITY>
csubj-cop Arg1:<ENTITY>, Arg2:<ENTITY>
csubj-cop-exp Arg1:<ENTITY>, Arg2:<ENTITY>
csubj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
dep Arg1:<ENTITY>, Arg2:<ENTITY>
dep-exp Arg1:<ENTITY>, Arg2:<ENTITY>
det Arg1:<ENTITY>, Arg2:<ENTITY>
det-exp Arg1:<ENTITY>, Arg2:<ENTITY>
dobj Arg1:<ENTITY>, Arg2:<ENTITY>
dobj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
ellipsis Arg1:<ENTITY>, Arg2:<ENTITY>
ellipsis-exp Arg1:<ENTITY>, Arg2:<ENTITY>
gobj Arg1:<ENTITY>, Arg2:<ENTITY>
gobj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
gsubj Arg1:<ENTITY>, Arg2:<ENTITY>
gsubj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
iccomp Arg1:<ENTITY>, Arg2:<ENTITY>
iccomp-exp Arg1:<ENTITY>, Arg2:<ENTITY>
infmod Arg1:<ENTITY>, Arg2:<ENTITY>
infmod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
intj Arg1:<ENTITY>, Arg2:<ENTITY>
intj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
mark Arg1:<ENTITY>, Arg2:<ENTITY>
mark-exp Arg1:<ENTITY>, Arg2:<ENTITY>
name Arg1:<ENTITY>, Arg2:<ENTITY>
name-exp Arg1:<ENTITY>, Arg2:<ENTITY>
neg Arg1:<ENTITY>, Arg2:<ENTITY>
neg-exp Arg1:<ENTITY>, Arg2:<ENTITY>
nn Arg1:<ENTITY>, Arg2:<ENTITY>
nn-exp Arg1:<ENTITY>, Arg2:<ENTITY>
nommod Arg1:<ENTITY>, Arg2:<ENTITY>
nommod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
nommod-own Arg1:<ENTITY>, Arg2:<ENTITY>
nommod-own-exp Arg1:<ENTITY>, Arg2:<ENTITY>
nsubj Arg1:<ENTITY>, Arg2:<ENTITY>
nsubj-cop Arg1:<ENTITY>, Arg2:<ENTITY>
nsubj-cop-exp Arg1:<ENTITY>, Arg2:<ENTITY>
nsubj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
num Arg1:<ENTITY>, Arg2:<ENTITY>
number Arg1:<ENTITY>, Arg2:<ENTITY>
number-exp Arg1:<ENTITY>, Arg2:<ENTITY>
num-exp Arg1:<ENTITY>, Arg2:<ENTITY>
parataxis Arg1:<ENTITY>, Arg2:<ENTITY>
parataxis-exp Arg1:<ENTITY>, Arg2:<ENTITY>
partmod Arg1:<ENTITY>, Arg2:<ENTITY>
partmod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
poss Arg1:<ENTITY>, Arg2:<ENTITY>
poss-exp Arg1:<ENTITY>, Arg2:<ENTITY>
preconj Arg1:<ENTITY>, Arg2:<ENTITY>
preconj-exp Arg1:<ENTITY>, Arg2:<ENTITY>
prt Arg1:<ENTITY>, Arg2:<ENTITY>
prt-exp Arg1:<ENTITY>, Arg2:<ENTITY>
punct Arg1:<ENTITY>, Arg2:<ENTITY>
punct-exp Arg1:<ENTITY>, Arg2:<ENTITY>
quantmod Arg1:<ENTITY>, Arg2:<ENTITY>
quantmod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
rcmod Arg1:<ENTITY>, Arg2:<ENTITY>
rcmod-exp Arg1:<ENTITY>, Arg2:<ENTITY>
rel Arg1:<ENTITY>, Arg2:<ENTITY>
rel-exp Arg1:<ENTITY>, Arg2:<ENTITY>
voc Arg1:<ENTITY>, Arg2:<ENTITY>
voc-exp Arg1:<ENTITY>, Arg2:<ENTITY>
xcomp Arg1:<ENTITY>, Arg2:<ENTITY>
xcomp-exp Arg1:<ENTITY>, Arg2:<ENTITY>
xsubj Arg1:<ENTITY>, Arg2:<ENTITY>
xsubj-cop Arg1:<ENTITY>, Arg2:<ENTITY>
xsubj-cop-exp Arg1:<ENTITY>, Arg2:<ENTITY>
xsubj-exp Arg1:<ENTITY>, Arg2:<ENTITY>

[events]
# none

[attributes]

# TODO: fill in all possible values. Can be done using
# cat TDT/*.ann | egrep '^A' | cut -f 2 | awk '{ print $1 }' | sort | uniq | while read t; do cat TDT/*.ann | egrep '^A' | cut -f 2 | awk '{ print $1, $3 }' | egrep '^'$t'[[:space:]]' | awk '{ print $2 }' | sort | uniq | tr '\n' '|' | perl -pe 's/\|$/\n/' | perl -pe 's/^/'$t' Arg:<ENTITY>, Value:/'; done

CASE Arg:<ENTITY>, Value:Abl|Acc|Ade|All|Ela|Ess|Gen|Ill|Ine|Ins|Lat|Nom|Par|Tra
CASECHANGE Arg:<ENTITY>, Value:cap|Cap
CLIT Arg:<ENTITY>, Value:Foc_ka|Foc_kaan|Foc_kin|Foc_s|Qst
CMP Arg:<ENTITY>, Value:Comp|Pos|Superl
DRV Arg:<ENTITY>, Value:Der_inen|Der_ja|Der_minen|Der_sti|Der_ton
INF Arg:<ENTITY>, Value:Inf1|Inf2|Inf3
MOOD Arg:<ENTITY>, Value:Cond|Imprt|Ind
NEG Arg:<ENTITY>, Value:ConNeg
NUM Arg:<ENTITY>, Value:Pl|Sg
OTHER Arg:<ENTITY>, Value:Typo+UNK|UNK
PCP Arg:<ENTITY>, Value:AgPcp|PrfPrc|PrsPrc
POSS Arg:<ENTITY>, Value:PxPl2|PxPl3|PxSg1|PxSg3
PRS Arg:<ENTITY>, Value:Pe4|Pl1|Pl3|Sg1|Sg2|Sg3
SUBCAT Arg:<ENTITY>, Value:Abbr|Card|CC|CS|Dem|Indef|Interr|Neg|Ord|Pers|Po|Prop|Refl|Rel
TENSE Arg:<ENTITY>, Value:Prs|Prt
VOICE Arg:<ENTITY>, Value:Act|Pass
