<!--
  Copyright 2017
  Ubiquitous Knowledge Processing (UKP) Lab
  Technische UniversitÃ¤t Darmstadt

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>de.tudarmstadt.ukp.inception.app</groupId>
    <artifactId>inception-app</artifactId>
    <version>0.11.0-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>
  <artifactId>inception-app-webapp</artifactId>
  <name>INCEpTION - Web-Application</name>
  <packaging>war</packaging>
  <properties>
    <docker.image.name>inceptionproject/inception-snapshots</docker.image.name>
  </properties>
  <dependencies>
    <!-- INCEPTION - CORE DEPENDENCIES -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-ui-core</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-doc</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-layer-docmetadata</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-image</artifactId>
    </dependency>

    <!-- INCEPTION - KNOWLEDGE BASE SUPPORT -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-ui-kb</artifactId>
    </dependency>

    <!-- INCEPTION - CONCEPT LINKING FUNCTIONALITY -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-concept-linking</artifactId>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.languagetool</groupId>
          <artifactId>language-ja</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- INCEPTION - ANNOTATION RECOMMENDATION FUNCTIONALITY -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-recommendation</artifactId>
    </dependency>
    <!--  
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-imls-dl4j</artifactId>
    </dependency>
    -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-imls-external</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-imls-opennlp</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-imls-stringmatch</artifactId>
    </dependency>

    <!-- INCEPTION - Example -->
    <!--
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-example-imls-data-majority</artifactId>
    </dependency>
    !-->

    <!-- INCEPTION - ACTIVE LEARNING FUNCTIONALITY -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-active-learning</artifactId>
    </dependency>

    <!-- INCEPTION - IN-PROJECT SEARCH FUNCTIONALITY -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-ui-search</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-search-mtas</artifactId>
    </dependency>

    <!-- INCEPTION - IN-PROJECT SEARCH FUNCTIONALITY -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-ui-external-search</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-external-search-elastic</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-external-search-pubannotation</artifactId>
    </dependency>

    <!-- INCEPTION - EVENT LOG -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-log</artifactId>
    </dependency>

    <!-- INCEPTION - ADDITIONAL EDITORS -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-html-editor</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.inception.app</groupId>
      <artifactId>inception-pdf-editor</artifactId>
    </dependency>

    <!-- READER/WRITER DEPENDENCIES -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-io-json</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-io-tsv</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-io-text</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-io-tcf</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-io-conll</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-io-xmi</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.io.conll-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.io.lif-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.dkpro.core</groupId>
      <artifactId>dkpro-core-io-nif-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.io.tei-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.api.segmentation-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.api.lexmorph-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.api.resources-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.api.parameter-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.api.syntax-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.dkpro.core</groupId>
      <artifactId>de.tudarmstadt.ukp.dkpro.core.api.io-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
    </dependency>

    <!-- WEBANNO DEPENDENCIES -->
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-automation</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-api-automation</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-ui-annotation</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-ui-curation</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-brat</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-ui-project</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-project</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-ui-core</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-api-formats</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-support</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-support-standalone</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-ui-monitoring</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-remote</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-security</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-model</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-api</artifactId>
    </dependency>
    <dependency>
      <groupId>de.tudarmstadt.ukp.clarin.webanno</groupId>
      <artifactId>webanno-doc</artifactId>
    </dependency>

    <!-- UIMA DEPENDENCIES -->
    <dependency>
      <groupId>org.apache.uima</groupId>
      <artifactId>uimaj-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.uima</groupId>
      <artifactId>uimafit-core</artifactId>
    </dependency>


    <!-- WICKET DEPENDENCIES -->
    <dependency>
      <groupId>org.apache.wicket</groupId>
      <artifactId>wicket-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.wicket-jquery-ui</groupId>
      <artifactId>wicket-jquery-ui-theme-uilightness</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.wicket-jquery-ui</groupId>
      <artifactId>wicket-kendo-ui-theme-bootstrap</artifactId>
    </dependency>

    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>

    <!-- SPRING SECURITY -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <!-- LOGGING DEPENDENCIES - SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>

    <!-- LOGGING DEPENDENCIES - LOG4J -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <!-- LOGGING DEPENDENCIES - Avoid Commons Logging -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- DATABASE / HIBERNATE -->

    <!-- <dependency> -->
    <!-- <groupId>org.hibernate</groupId> -->
    <!-- <artifactId>hibernate-entitymanager</artifactId> -->
    <!-- </dependency> -->
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    
    <!-- JAXB DEPENDENCIES -->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>javax.activation-api</artifactId>
    </dependency>
        
    <!-- Spring Boot dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>    
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.giffing.wicket.spring.boot.starter</groupId>
      <artifactId>wicket-spring-boot-starter</artifactId>
    </dependency>
    <!--  
    <dependency>
      <groupId>net.bull.javamelody</groupId>
      <artifactId>javamelody-spring-boot-starter</artifactId>
      <version>${javamelody.version}</version>
    </dependency>
    -->
  </dependencies>
  <build>
    <plugins>
      <!-- 
        This module has a slight complex setup to allow making it work in a command line build
         as well as in an m2e build.
        
        The general procedure is:
        1) generate asciidoc HTML (also PDF when on the command line)
        2) sync generated HTML + images to a proper package under src/main/resources
           This is the reason why src/main/resources is excluded from version control
        3) let Maven pick up the stuff from src/main/resources and make it available to m2e 
           workspace builds or package it into a JAR
           
        When running in m2e, building of PDFs is skipped.
        Mind that rebuilding of HTML from asciidoc works in Eclipse only on an explicit project clean.
        There is no incremental build!
       -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-documentation</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <descriptors>
                <descriptor>src/assembly/documentation.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>user-guide-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <sourceHighlighter>coderay</sourceHighlighter>
              <sourceDocumentName>user-guide.adoc</sourceDocumentName>
              <imagesDir>./user-guide/images</imagesDir>
              <attributes>
                <toc>left</toc>
                <include-dir>./user-guide/</include-dir>
                <source-dir>${project.basedir}/../</source-dir>
              </attributes>
            </configuration>
          </execution>
          <execution>
            <id>developer-guide-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <sourceHighlighter>coderay</sourceHighlighter>
              <sourceDocumentName>developer-guide.adoc</sourceDocumentName>
              <imagesDir>./developer-guide/images</imagesDir>
              <attributes>
                <toc>left</toc>
                <include-dir>./developer-guide/</include-dir>
                <source-dir>${project.basedir}/../</source-dir>
              </attributes>
            </configuration>
          </execution>
          <execution>
            <id>admin-guide-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <sourceHighlighter>coderay</sourceHighlighter>
              <sourceDocumentName>admin-guide.adoc</sourceDocumentName>
              <attributes>
                <toc>left</toc>
                <include-dir>./admin-guide/</include-dir>
                <source-dir>${project.basedir}/../</source-dir>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>clean-copy-online-docs-to-classes</id>
            <phase>clean</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <delete includeemptydirs="true" failonerror="false">
                  <fileset dir="src/main/resources/public/doc" includes="**/*" />
                </delete>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>copy-online-docs-to-classes</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <mkdir dir="src/main/resources/public/doc" />
                <!-- 
                It is important that we SYNC here instead of delete/copy, otherwise we may run into
                an endless build loop in Eclipse.
                 -->
                <sync todir="src/main/resources/public/doc">
                  <fileset dir="target/generated-docs">
                    <include name="**/*.html" />
                    <include name="**/*.png" />
                    <include name="**/*.jpg" />
                  </fileset>
                </sync>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctor-maven-plugin</artifactId>
          <configuration>
            <sourceDirectory>target/${project.artifactId}-${project.version}-documentation/META-INF/asciidoc</sourceDirectory>
            <attributes>
              <doctype>book</doctype>
              <toclevels>8</toclevels>
              <sectanchors>true</sectanchors>
              <docinfo1>true</docinfo1>
              <project-version>${project.version}</project-version>
              <revnumber>${project.version}</revnumber>
              <product-name>INCEpTION</product-name>
              <product-website-url>https://inception-project.github.io</product-website-url>
              <icons>font</icons>
            </attributes>
            <requires>
              <require>asciidoctor-diagram</require>
            </requires>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.asciidoctor</groupId>
              <artifactId>asciidoctorj-diagram</artifactId>
              <version>1.5.12</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <configuration>
            <ignoredUsedUndeclaredDependencies>
              <ignoredUsedUndeclaredDependency>org.apache.tomcat.embed:tomcat-embed-core</ignoredUsedUndeclaredDependency>
            </ignoredUsedUndeclaredDependencies>
            <usedDependencies>
              <!-- INCEpTION backend modules - used via Spring -->
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-image</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-layer-docmetadata</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-concept-linking</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-recommendation</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-imls-external</usedDependency>
              <!-- usedDependency>de.tudarmstadt.ukp.inception.app:inception-imls-dl4j</usedDependency -->
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-imls-opennlp</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-imls-stringmatch</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-ui-kb</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-ui-search</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-ui-external-search</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-search-mtas</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-external-search-elastic</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-external-search-pubannotation</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-active-learning</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-log</usedDependency>
              <!-- INCEpTION annotation editor modules - used via Spring -->
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-brat</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-html-editor</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-pdf-editor</usedDependency>
              <!-- INCEpTION IO Modules - used via Spring -->
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-io-json</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-io-tsv</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-io-tcf</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-io-xmi</usedDependency>
              <!-- usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-io-conll</usedDependency -->
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-io-text</usedDependency>
              <!-- WebAnno UI Modules - they auto-register via reflection -->
              <!-- Detected because we explicitly exclude their menu items  
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-ui-annotation</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-ui-curation</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-ui-monitoring</usedDependency>
              -->
              <!-- Detected because we include a special access menu item to the project settings
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-ui-project</usedDependency>
              -->
              <!-- Documentation modules - needed but no Java dependency -->
              <usedDependency>de.tudarmstadt.ukp.inception.app:inception-doc</usedDependency>
              <usedDependency>de.tudarmstadt.ukp.clarin.webanno:webanno-doc</usedDependency>
              <!-- WebAnno backend modules - used via Spring -->
              <usedDependency> de.tudarmstadt.ukp.clarin.webanno:webanno-project</usedDependency>
              <usedDependency> de.tudarmstadt.ukp.clarin.webanno:webanno-remote</usedDependency>
              <!-- JDBC drivers and database stuff - used via reflection -->
              <usedDependency>org.hibernate:hibernate-entitymanager</usedDependency>
              <usedDependency>commons-dbcp:commons-dbcp</usedDependency>
              <usedDependency>mysql:mysql-connector-java</usedDependency>
              <usedDependency>org.hsqldb:hsqldb</usedDependency>
              <usedDependency>org.liquibase:liquibase-core</usedDependency>
              <!-- Logging - used via reflection / optional -->
              <usedDependency>org.slf4j:log4j-over-slf4j</usedDependency>
              <usedDependency>org.slf4j:jcl-over-slf4j</usedDependency>
              <usedDependency>org.apache.logging.log4j:log4j-slf4j-impl</usedDependency>
              <usedDependency>org.apache.logging.log4j:log4j-core</usedDependency>
              <usedDependency>commons-logging:commons-logging</usedDependency>
              <!-- Themes -->
              <usedDependency>com.googlecode.wicket-jquery-ui:wicket-kendo-ui-theme-bootstrap</usedDependency>
              <usedDependency>com.googlecode.wicket-jquery-ui:wicket-jquery-ui-theme-uilightness</usedDependency>
              <!-- JavaMelody - used via web.xml -->
              <!--
              <usedDependency>net.bull.javamelody:javamelody-core</usedDependency>
              -->
              <!-- Spring configuration -->
              <usedDependency>org.springframework.boot:spring-boot-starter-web</usedDependency>
              <usedDependency>org.springframework.boot:spring-boot-starter-validation</usedDependency>
              <usedDependency>org.springframework.boot:spring-boot-starter-tomcat</usedDependency>
              <usedDependency>com.giffing.wicket.spring.boot.starter:wicket-spring-boot-starter</usedDependency>
              <usedDependency>org.springframework:spring-webmvc</usedDependency>
              <usedDependency>org.springframework:spring-expression</usedDependency>
              <!-- Spring Web MVC data conversion -->
              <usedDependency>commons-fileupload:commons-fileupload</usedDependency>
              <!-- Spring AOP
                <usedDependency>org.springframework:spring-aop</usedDependency>
                <usedDependency>org.springframework:spring-aspects</usedDependency>
                <usedDependency>org.aspectj:aspectjrt</usedDependency>
              -->
            </usedDependencies>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>m2e</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <!--
              - This plugin's configuration is used to store Eclipse m2e settings only.
              - It has no influence on the Maven build itself.
            -->
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <versionRange>[1.0,)</versionRange>
                        <goals>
                          <goal>single</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute />
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <versionRange>[1.0,)</versionRange>
                        <goals>
                          <goal>run</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute />
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <versionRange>[1.0,)</versionRange>
                        <goals>
                          <goal>add-resource</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute />
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <versionRange>[1.0,)</versionRange>
                        <goals>
                          <goal>process-asciidoc</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute />
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>non-m2e</id>
      <activation>
        <property>
          <name>!m2e.version</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- 
              This plugin must be declared before the ant-run plugin because during the package
              phase, it creates a the files which the "copy-war-to-jar" execution of the ant-run
              plugin running also in the package phase requires.
            -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${spring.boot.version}</version>
            <configuration>
              <executable>true</executable>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>repackage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <!--
                  We want the original file to be the WAR and the repackaged all-inclusive runnable
                  thing with the embedded Tomcat to be the JAR.
                 -->
                <id>copy-war-to-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <move file="target/${project.artifactId}-${project.version}.war" tofile="target/inception-app-standalone-${project.version}.jar" />
                    <move file="target/${project.artifactId}-${project.version}.war.original" tofile="target/${project.artifactId}-${project.version}.war" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>pdf-documentation</id>
      <activation>
        <property>
          <name>!m2e.version</name>
        </property>
        <!-- 
         - Build PDFs currently does not work with Java 10 because of a problem parsing the
         - version string: https://github.com/jruby/jruby-openssl/issues/157
         -->
        <jdk>[,10)</jdk>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.asciidoctor</groupId>
              <artifactId>asciidoctor-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>user-guide-pdf</id>
                  <phase>generate-resources</phase>
                  <goals>
                    <goal>process-asciidoc</goal>
                  </goals>
                  <configuration>
                    <backend>pdf</backend>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <sourceDocumentName>user-guide.adoc</sourceDocumentName>
                    <imagesDir>./user-guide/images</imagesDir>
                    <attributes>
                      <toc>preamble</toc>
                      <include-dir>./user-guide/</include-dir>
                      <source-dir>${project.basedir}/../</source-dir>
                    </attributes>
                  </configuration>
                </execution>
                <execution>
                  <id>developer-guide-pdf</id>
                  <phase>generate-resources</phase>
                  <goals>
                    <goal>process-asciidoc</goal>
                  </goals>
                  <configuration>
                    <backend>pdf</backend>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <sourceDocumentName>developer-guide.adoc</sourceDocumentName>
                    <imagesDir>./developer-guide/images</imagesDir>
                    <attributes>
                      <toc>preamble</toc>
                      <include-dir>./developer-guide/</include-dir>
                      <source-dir>${project.basedir}/../</source-dir>
                    </attributes>
                  </configuration>
                </execution>
                <execution>
                  <id>admin-guide-pdf</id>
                  <phase>generate-resources</phase>
                  <goals>
                    <goal>process-asciidoc</goal>
                  </goals>
                  <configuration>
                    <backend>pdf</backend>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <sourceDocumentName>admin-guide.adoc</sourceDocumentName>
                    <attributes>
                      <toc>preamble</toc>
                      <include-dir>./admin-guide/</include-dir>
                      <source-dir>${project.basedir}/../</source-dir>
                    </attributes>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <activation>
        <property>
          <name>enable-docker</name>
        </property>
      </activation>
      <properties>
        <docker.jarfile>maven/inception-app-standalone-${project.version}.jar</docker.jarfile>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>${docker.image.name}</name>
                  <build>
                    <tags>
                      <tag>latest</tag>
                      <tag>${project.version}</tag>
                    </tags>
                    <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                    <filter>@</filter>
                    <assembly>
                      <descriptorRef>artifact</descriptorRef>
                      <inline>
                        <files>
                          <file>
                            <source>${project.build.directory}/inception-app-standalone-${project.version}.jar</source>
                          </file>
                        </files>
                      </inline>
                    </assembly>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>doc-only</id>
      <properties>
        <maven.install.skip>true</maven.install.skip>
      </properties>
    </profile>
  </profiles>
</project>